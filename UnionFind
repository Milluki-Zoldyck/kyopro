class UnionFind{
    public:
    int par[MAX_NUM];
    int siz[MAX_NUM];

    void init(int n){
        rep(i,n) {
            par[i]=-1;
            siz[i]=1;
        }
    }

    int root(int c){
        if(par[c]!=-1) c = root(par[c]); 
        return c;
    }

    void unite(int u,int v){
        int ru = root(u),rv = root(v);
        if(ru == rv) return;
        if(siz[ru]>=siz[rv]){
            par[rv] = ru;
            siz[ru] += siz[rv];
        }
        else{
            par[ru] = root(rv);
            siz[rv] += siz[ru];
        }
    }

    bool same(int u,int v){
        return root(u)==root(v);
    }
};
